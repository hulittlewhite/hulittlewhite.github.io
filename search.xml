<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>内网采用 Docker 部署 GitLab</title>
      <link href="/2024/02/29/docker&amp;gitlab/"/>
      <url>/2024/02/29/docker&amp;gitlab/</url>
      
        <content type="html"><![CDATA[<h1 id="1-docker- 离线安装"><a class="markdownIt-Anchor" href="#1-docker- 离线安装">#</a> 1. Docker 离线安装 </h1><p> 第一步：下载  <code>Docker</code>  二进制文件（离线安装包）。</p><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/</span>static<span class="hljs-regexp">/stable/</span>x86_64/<br></code></pre></td></tr></table></figure><p> 第二步：通过 FTP 工具（这里采用的是  <code>WinSCP</code> ），将第一步中下载获得的  <code>docker-18.06.1-ce.tgz</code>  上传到服务器上（这里用的是  <code>CentOS 7</code>  镜像构建的虚拟机）。</p><p> 第三步：解压  <code>Docker</code>  安装包。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ tar zxf docker-18.06.1-ce.tgz<br></code></pre></td></tr></table></figure><p> 第四步：将  <code>Docker</code>  相关命令拷贝到  <code>/usr/bin</code> ，方便直接运行命令。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ sudo <span class="hljs-built_in">cp</span> docker/* /usr/bin/ <br></code></pre></td></tr></table></figure><p> 第五步：启动  <code>Docker</code>  守护程序。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ sudo dockerd &amp;<br></code></pre></td></tr></table></figure><p> 第六步：验证是否安装成功，执行  <code>docker info</code>  命令，若正常打印版本信息则安装成功。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ docker info<br></code></pre></td></tr></table></figure><p> 第七步：将  <code>Docker</code>  注册为系统服务。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 1. 查询 docker 进程 </span><br>ps -ef|grep docker<br><br><span class="hljs-comment"># 2. 杀掉 docker 进程（一定要执行这一步骤）</span><br><span class="hljs-built_in">kill</span> 进程 <span class="hljs-built_in">id</span><br><br><span class="hljs-comment"># 3. 在 /usr/lib/systemd/system/ 目录下创建 docker.service 文件 </span><br>sudo vi /usr/lib/systemd/system/docker.service<br><br><span class="hljs-comment"># docker.service 文件 </span><br>[Unit]<br>Description=Docker Application Container Engine<br>Documentation=https://docs.docker.com<br>After=network-online.target firewalld.service<br>Wants=network-online.target<br>[Service]<br>Type=notify<br>ExecStart=/usr/bin/dockerd<br>ExecReload=/bin/kill -s HUP <span class="hljs-variable">$MAINPID</span><br>LimitNOFILE=infinity<br>LimitNPROC=infinity<br>TimeoutStartSec=0<br>Delegate=<span class="hljs-built_in">yes</span><br>KillMode=process<br>Restart=on-failure<br>StartLimitBurst=3<br>StartLimitInterval=60s<br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p> 第八步：重启  <code>Docker</code>  服务。</p><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> systemctl <span class="hljs-built_in">start</span> docker<br></code></pre></td></tr></table></figure><p>🌟 备注：</p><ul><li> 停止  <code>Docker</code>  服务： <code>systemctl stop docker</code> 。</li><li> 开机自启 / 取消开机自启  <code>Docker</code>  服务： <code>systemctl enable/disable docker</code> 。</li></ul><h1 id="2-gitlab- 离线安装"><a class="markdownIt-Anchor" href="#2-gitlab- 离线安装">#</a> 2. GitLab 离线安装 </h1><p> 第一步：通过 FTP 工具（这里采用的是  <code>WinSCP</code> ），将第一步中下载获得的  <code>git-backup.tar</code>  上传到服务器上（这里用的是  <code>CentOS 7</code>  镜像构建的虚拟机），并执行  <code>load</code>  命令进行还原。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ docker load -i ~/git-backup.tar<br></code></pre></td></tr></table></figure><p> 第二步：运行  <code>GitLab</code>  容器。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ docker run \<br>    --detach \<br>    --privileged=<span class="hljs-literal">true</span> \<br>    --hostname 内网 ip \<br>    --publish 443:443 --publish 8098:8098 --publish 5000:22 \<br>    --name mygitlab \<br>    --restart unless-stopped \<br>    --volume /data/docker/gitlab/etc:/etc/gitlab \<br>    --volume /data/docker/gitlab/log:/var/log/gitlab \<br>    --volume /data/docker/gitlab/data:/var/opt/gitlab \<br>    git-backup:latest<br></code></pre></td></tr></table></figure><p> 第三步：修改  <code>gitlab.rb</code>  文件，路径为  <code>/data/docker/gitlab/etc/</code> 。</p><figure class="highlight properties"><table><tr><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">external_url</span> <span class="hljs-string">&#x27;http:// 内网 ip&#x27;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># ssh 连接的端口 </span><br><span class="hljs-attr">gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;]</span> = <span class="hljs-string">5000</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># http 访问的端口 </span><br><span class="hljs-attr">nginx[&#x27;listen_port&#x27;]</span> = <span class="hljs-string">8098</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 备份文件保留的时长，单位是秒 </span><br><span class="hljs-attr">gitlab_rails[&#x27;backup_keep_time&#x27;]</span> = <span class="hljs-string">604800</span><br></code></pre></td></tr></table></figure><p> 第四步：重启 GitLab 容器。容器  <code>id</code>  可以通过  <code>docker ps</code>  命令查到  <code>CONTAINER ID</code> 。</p><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh">$ docker restart 容器 <span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p> 第五步：关闭防火墙。</p><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 查看防火墙状态 </span><br>$<span class="hljs-built_in"> firewall </span>-cmd --state<br><br><span class="hljs-comment"># 关闭防火墙 </span><br>systemctl stop firewall.service<br><br><span class="hljs-comment"># 取消防火墙自启 </span><br>systemctl <span class="hljs-built_in">disable</span> firewall<br></code></pre></td></tr></table></figure><h1 id="3- 访问内网部署的 -gitlab"><a class="markdownIt-Anchor" href="#3- 访问内网部署的 -gitlab">#</a> 3. 访问内网部署的 GitLab</h1><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span> 内网 ip:<span class="hljs-number">8089</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># GitLab 默认账号 </span><br>root<br><br><span class="hljs-comment"># GitLab 默认密码存放路径 </span><br><span class="hljs-regexp">/data/</span>docker<span class="hljs-regexp">/gitlab/</span>etc<br></code></pre></td></tr></table></figure><p> 首次登录  <code>GitLab</code>  需要重置密码。</p><h1 id="4- 备份 -docker- 容器"><a class="markdownIt-Anchor" href="#4- 备份 -docker- 容器">#</a> 4. 备份 Docker 容器 </h1><figure class="highlight sh"><table><tr><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 创建 docker 容器备份 </span><br>docker commit -p【<span class="hljs-built_in">id</span>】git-backup<br><br><span class="hljs-comment"># 查看是否创建成功 </span><br>docker images<br><br><span class="hljs-comment"># 保存 </span><br>docker save -o ~/git-backup.tar git-backup<br></code></pre></td></tr></table></figure><h1 id="5- 参考资料"><a class="markdownIt-Anchor" href="#5- 参考资料">#</a> 5. 参考资料 </h1><ul><li><a href="https://cloud.tencent.com/developer/article/2157734">docker 离线安装「建议收藏」</a></li><li><a href="https://blog.csdn.net/javascript_good/article/details/131481249">docker 方式安装 gitlab</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> GitLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 增删改查（CRUD）简易案例</title>
      <link href="/2022/02/02/crud/"/>
      <url>/2022/02/02/crud/</url>
      
        <content type="html"><![CDATA[<h1 id="1- 项目概述"><a class="markdownIt-Anchor" href="#1- 项目概述">#</a> 1. 项目概述</h1><ul><li><p>简介：Spring Boot 增删改查（CRUD）简易案例</p></li><li><p>前端： <code>HTML + Thymeleaf</code></p></li><li><p>项目架构：</p></li></ul><figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">.<br>├── src<br>│   ├── main<br>│   │   ├── java<br>│   │   │   └── com.example<br>│   │   │       └── crud                          <span class="hljs-comment">-- 业务功能模块 即 CRUD</span><br>│   │   │           ├── controller                <span class="hljs-comment">-- Controller 层</span><br>│   │   │           │    └── UserController           <br>│   │   │           ├── dao                       <span class="hljs-comment">-- Dao 层</span><br>│   │   │           │    └── UserDao              <span class="hljs-comment">-- Dao 层接口         </span><br>│   │   │           ├── pojo                      <span class="hljs-comment">-- 数据模型</span><br>│   │   │           │    └── <span class="hljs-keyword">User</span>                 <span class="hljs-comment">-- 请求体</span><br>│   │   │           ├── service                   <span class="hljs-comment">-- Service 层</span><br>│   │   │           │    ├── impl                 <span class="hljs-comment">-- Service 层接口的实现</span><br>│   │   │           │    │    └── UserServiceImpl <br>│   │   │           │    └── UserService          <span class="hljs-comment">-- Service 层接口</span><br>│   │   │           └── Application.java          <span class="hljs-comment">-- 启动类</span><br>│   │   └── resources<br>│   │       ├── static                            <span class="hljs-comment">-- 静态资源</span><br>│   │       ├── <span class="hljs-keyword">template</span>                          <span class="hljs-comment">-- 模板</span><br>│   │              ├── <span class="hljs-keyword">add</span>.html                   <span class="hljs-comment">-- 增加用户页面</span><br>│   │              ├── <span class="hljs-keyword">index</span>.html                 <span class="hljs-comment">-- 主页面</span><br>│   │              └── modify.html                <span class="hljs-comment">-- 修改用户页面</span><br>└── pom.xml                                       <span class="hljs-comment">-- 项目依赖</span><br></code></pre></td></tr></table></figure><h1 id="2- 数据库"><a class="markdownIt-Anchor" href="#2- 数据库">#</a> 2. 数据库</h1><ul><li><strong>MySQL</strong>：v8.0.29</li><li><strong>Navicat Premium</strong> 15</li><li>** 新建连接 Connection：**Spring Boot CRUD</li><li><strong>新建 Database</strong>：crud</li><li><strong>数据库表</strong>：user</li><li><strong>包含三个字段</strong>：id，username，password</li></ul><table><thead><tr><th>id</th><th>username</th><th>password</th></tr></thead><tbody><tr><td>1</td><td>Lebron</td><td>1111</td></tr><tr><td>2</td><td>Durant</td><td>2222</td></tr><tr><td>3</td><td>Curry</td><td>3333</td></tr><tr><td>4</td><td>Bryant</td><td>4444</td></tr><tr><td>5</td><td>Harden</td><td>5555</td></tr></tbody></table><p>建表 SQL 语句：</p><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `<span class="hljs-keyword">user</span>` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `username` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4 <span class="hljs-keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `password` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8mb4 <span class="hljs-keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">6</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_0900_ai_ci;<br></code></pre></td></tr></table></figure><h1 id="3-pojo"><a class="markdownIt-Anchor" href="#3-pojo">#</a> 3. POJO</h1><ul><li>包  <code>pojo</code>  下包含实体类  <code>User</code> 。</li><li>实体类有三个私有成员变量： <code>id</code> ， <code>username</code> ， <code>password</code> 。</li><li>这三个属性分别与数据库 crud 中的表 user 的字段相对应。</li><li>实体类  <code>User</code>  包含带参构造方法、无参构造方法、三个属性对应的 get 和 set 方法，另外还包含一个重写的 toString 方法。</li></ul><p><code>User.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.crud.pojo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> id;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setId</span><span class="hljs-params">(Integer id)</span> &#123;<br>        <span class="hljs-built_in">this</span>.id = id;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getUsername</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> username;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setUsername</span><span class="hljs-params">(String username)</span> &#123;<br>        <span class="hljs-built_in">this</span>.username = username;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getPassword</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> password;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setPassword</span><span class="hljs-params">(String password)</span> &#123;<br>        <span class="hljs-built_in">this</span>.password = password;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">User</span><span class="hljs-params">(Integer id,String username,String password)</span> &#123;<br>        <span class="hljs-built_in">this</span>.id = id;<br>        <span class="hljs-built_in">this</span>.username = username;<br>        <span class="hljs-built_in">this</span>.password = password;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">User</span><span class="hljs-params">()</span> &#123;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;User&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;id=&quot;</span> + id +<br>                <span class="hljs-string">&quot;, username=&#x27;&quot;</span> + username + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, password=&#x27;&quot;</span> + password + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="4-dao"><a class="markdownIt-Anchor" href="#4-dao">#</a> 4. Dao</h1><ul><li>包 <code>dao</code>  下包含接口 <code>UserDao</code> 。</li><li>注解  <code>@Mapper</code>  用于修饰接口 <code>UserDao</code> 。</li><li>注解  <code>@Insert</code> 、 <code>@Delete</code> 、 <code>@Update</code> 、 <code>@Select</code>  用于修饰接口内的方法（增删改查）。</li></ul><p>接口  <code>UserMapper.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.crud.dao;<br><br><span class="hljs-keyword">import</span> com.example.crud.pojo.User;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Mapper;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.*;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserMapper</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询全部数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Select(&quot;select * from user&quot;)</span><br>    <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Insert(&quot;insert into user (username, password) values (#&#123;username&#125;, #&#123;password&#125;)&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">save</span><span class="hljs-params">(User user)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Delete(&quot;delete from user where id =#&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 ID 查找</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Select(&quot;select * from user where id =#&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 ID 更新数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Update(&quot;update user set username=#&#123;username&#125;,password=#&#123;password&#125; where id=#&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">updateById</span><span class="hljs-params">(User user)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="5-service"><a class="markdownIt-Anchor" href="#5-service">#</a> 5. Service</h1><ul><li>包  <code>service</code>  下包含包  <code>impl</code>  和 Service 层的接口  <code>UserService</code></li><li>其中，包  <code>impl</code>  包含  <code>Service</code>  层接口的实现类  <code>UserServiceImpl</code></li><li><code>Service</code>  层既需要调用  <code>Dao</code>  层接口，又需要提供接口给  <code>Controller</code>  层的类进行调用。</li></ul><p>接口  <code>UserService.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.crud.service;<br><br><span class="hljs-keyword">import</span> com.example.crud.pojo.User;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询全部数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">save</span><span class="hljs-params">(User user)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 ID 查找</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">updateById</span><span class="hljs-params">(User user)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>接口实现类  <code>UserServiceImpl.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.crud.service.impl;<br><br><span class="hljs-keyword">import</span> com.example.crud.dao.UserMapper;<br><span class="hljs-keyword">import</span> com.example.crud.pojo.User;<br><span class="hljs-keyword">import</span> com.example.crud.service.UserService;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserMapper userdDao;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> userdDao.findAll();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">save</span><span class="hljs-params">(User user)</span> &#123;<br>        <span class="hljs-keyword">return</span> userdDao.save(user);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span> &#123;<br>        <span class="hljs-keyword">return</span> userdDao.delete(id);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span> &#123;<br>        <span class="hljs-keyword">return</span> userdDao.get(id);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">updateById</span><span class="hljs-params">(User user)</span> &#123;<br>        <span class="hljs-keyword">return</span> userdDao.updateById(user);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="6-controller"><a class="markdownIt-Anchor" href="#6-controller">#</a> 6. Controller</h1><ul><li>包  <code>controller</code>  包含类  <code>UserController</code> 。</li><li>注解  <code>@Controller</code>  用于修饰类  <code>UserController</code> 。</li><li>注解  <code>@Autowired</code>  表示自动注入  <code>Service</code>  层提供的接口，供  <code>Controller</code>  层使用。</li></ul><p><code>UserController.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.crud.controller;<br><br><span class="hljs-keyword">import</span> com.example.crud.pojo.User;<br><span class="hljs-keyword">import</span> com.example.crud.service.UserService;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.ui.Model;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/index.html&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">userList</span><span class="hljs-params">(Map&lt;String, List&gt; result)</span> &#123;<br>        List&lt;User&gt; users = userService.findAll();<br>        result.put(<span class="hljs-string">&quot;users&quot;</span>, users);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新增数据</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/add&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">save</span><span class="hljs-params">(User user)</span> &#123;<br>        userService.save(user);<br>        <span class="hljs-comment">// 表示重置 index.html 界面并且跳转到 index.html 界面</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/index.html&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据, 本来需要使用 DeleteMapping，</span><br><span class="hljs-comment">     * 但是由于没有界面可以隐藏，所以这里就直接写了 RequestMapping</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@RequestMapping(&quot;/delete/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> <span class="hljs-type">int</span> id, HttpServletResponse servletResponse)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        userService.delete(id);<br>        System.out.println(<span class="hljs-string">&quot;----- delete 方法执行 -----&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/index.html&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 id 进行修改</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/updatePage/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">updatePage</span><span class="hljs-params">(Model model, <span class="hljs-meta">@PathVariable</span> <span class="hljs-type">int</span> id)</span>&#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.get(id);<br>        model.addAttribute(<span class="hljs-string">&quot;user&quot;</span>,user);<br>        <span class="hljs-comment">// 表示跳转到 modify.html 界面</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;modify&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@PutMapping(&quot;/update&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">updateUser</span><span class="hljs-params">(Model model, User user, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;id&quot;</span>);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">userById</span> <span class="hljs-operator">=</span> userService.get(Integer.parseInt(id));<br>        userService.updateById(user);<br>        System.out.println(user);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/index.html&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果执行添加操作，后面的添加请求不会覆盖前面的请求，所以使用  <code>@Postmapping</code></p><p>如果执行修改操作，后面的修改请求会把前面的请求给覆盖掉，所以使用  <code>@PutMapping</code></p><h1 id="7- 前端页面"><a class="markdownIt-Anchor" href="#7- 前端页面">#</a> 7. 前端页面</h1><p>包  <code>resources</code>  下的包  <code>templates</code>  下有三个 html 文件。</p><h2 id="71- 主页面"><a class="markdownIt-Anchor" href="#71- 主页面">#</a> 7.1 主页面</h2><p>主页面  <code>index.html</code></p><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>用户列表 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 引入 Bootstrap --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-tag">a</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffffff</span>;</span><br><span class="language-css">  &#125;</span><br><span class="language-css">  <span class="hljs-selector-tag">h1</span>&#123;</span><br><span class="language-css">    <span class="hljs-comment">/* 文字对齐 */</span></span><br><span class="language-css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">  &#125;</span><br><span class="language-css">  <span class="hljs-selector-tag">button</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>: cornflowerblue;</span><br><span class="language-css">  &#125;</span><br><span class="language-css">  <span class="hljs-selector-class">.parent</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">  &#125;</span><br><span class="language-css">  <span class="hljs-selector-class">.btn</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: auto;</span><br><span class="language-css">  &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Spring Boot CRUD<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-comment">&lt;!--table-striped: 斑马线格式，table-bordered：带边框的表格，table-hover：鼠标悬停高亮的表格 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table table-striped table-bordered table-hover text-center&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- th 标签定义 html 表格中的表头单元格 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span> 编号 <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span> 用户名 <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span> 密码 <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span> 操作 <span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>  <span class="hljs-comment">&lt;!--tr 标签定义 html 表格中的所有行 --&gt;</span><br>  <span class="hljs-comment">&lt;!-- 遍历集合，如果被遍历的变量 users 为 null 或者不存在，则不会进行遍历，也不会报错 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">th:each</span>=<span class="hljs-string">&quot;user:$&#123;users&#125;&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- td 标签定义 html 表格中的标准单元格 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;user.username&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;user.password&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- a 标签用来定义超链接 href 表示超链接 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;&#x27;/updatePage/&#x27;+$&#123;user.id&#125;&#125;&quot;</span>&gt;</span> 更改 <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;&#x27;/delete/&#x27;+$&#123;user.id&#125;&#125;&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;return confirm(&#x27; 确定删除？&#x27;)&quot;</span>&gt;</span> 删除 <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;parent&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-block&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/add.html&quot;</span>&gt;</span> 添加用户<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="72- 增加用户页面"><a class="markdownIt-Anchor" href="#72- 增加用户页面">#</a> 7.2 增加用户页面</h2><p>新增用户页面  <code>add.html</code></p><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>添加用户 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sty</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:600px;height:100%;margin-left:350px;margin-top: 180px;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/add&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- form-control 给 input 添加这个 class 后就会使用 bootstrap 自带的 input 框 --&gt;</span><br>            用户名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;username&#125;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 注意参数的拼接 --&gt;</span><br>            密 码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;password&#125;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary btn-lg btn-block&quot;</span>&gt;</span> 保存<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="73- 更改用户信息页面"><a class="markdownIt-Anchor" href="#73- 更改用户信息页面">#</a> 7.3 更改用户信息页面</h2><p>更改用户信息页面  <code>modify.html</code></p><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>修改用户 <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:600px;height:100%;margin-left:350px;margin-top: 180px;&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/update&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- rest 风格中的更新是 put 请求，</span><br><span class="hljs-comment">    所以这块先使用 post 请求，然后隐藏起来改为 put 请求 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;_method&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;put&quot;</span>&gt;</span><br>    ID：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;user.id&#125;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    用户名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;user.username&#125;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    密 码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;user.password&#125;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary btn-lg btn-block&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;return confirm(&#x27; 确认修改？&#x27;)&quot;</span>&gt;</span> 提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="8- 配置文件"><a class="markdownIt-Anchor" href="#8- 配置文件">#</a> 8. 配置文件</h1><p><code>application.yml</code></p><figure class="highlight properties"><table><tr><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">spring</span>:<span class="hljs-string"></span><br>  <span class="hljs-attr">web</span>:<span class="hljs-string"></span><br>    <span class="hljs-attr">resources</span>:<span class="hljs-string"></span><br>      <span class="hljs-attr">static-locations</span>: <span class="hljs-string">classpath:/static/,classpath:/templates/</span><br>  <span class="hljs-attr">datasource</span>:<span class="hljs-string"></span><br>    <span class="hljs-attr">type</span>: <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br>    <span class="hljs-attr">url</span>: <span class="hljs-string">jdbc:mysql://localhost:3306/crud?useSSL=false</span><br>    <span class="hljs-attr">username</span>: <span class="hljs-string">root</span><br>    <span class="hljs-attr">password</span>: <span class="hljs-string">123456</span><br>    <span class="hljs-attr">driver-class-name</span>: <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-comment">    # 普通浏览器只能 get 和 post 请求，</span><br><span class="hljs-comment">    # 所以如果需要其他的请求方式，需要这个，然后隐藏起来</span><br>  <span class="hljs-attr">mvc</span>:<span class="hljs-string"></span><br>    <span class="hljs-attr">hiddenmethod</span>:<span class="hljs-string"></span><br>      <span class="hljs-attr">filter</span>:<span class="hljs-string"></span><br>        <span class="hljs-attr">enabled</span>: <span class="hljs-string">true</span><br>  <span class="hljs-attr">devtools</span>:<span class="hljs-string"></span><br>    <span class="hljs-attr">restart</span>:<span class="hljs-string"></span><br>      <span class="hljs-attr">enabled</span>: <span class="hljs-string">true # 设置开启热部署</span><br>  <span class="hljs-attr">freemarker</span>:<span class="hljs-string"></span><br>    <span class="hljs-attr">cache</span>: <span class="hljs-string">false # 页面不加载缓存，修改即使生效</span><br><span class="hljs-attr">mybatis</span>:<span class="hljs-string"></span><br>  <span class="hljs-attr">configuration</span>:<span class="hljs-string"></span><br>    <span class="hljs-attr">map-underscore-to-camel-case</span>: <span class="hljs-string">true # 下划线驼峰设置</span><br>    <span class="hljs-attr">log-impl</span>: <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl   # 打印 SQL 语句</span><br></code></pre></td></tr></table></figure><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.6.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">relativePath</span>/&gt;</span> <span class="hljs-comment">&lt;!-- lookup parent from repository --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.csq<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>csqtest<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hutianle<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Demo project for Spring Boot<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- mybatis --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--mysql 连接器 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 阿里数据源 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.1.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 获取页面 session 对象 request 对象 response 对象 HttpServletXXX jar 包 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--json 转换工具包 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.47<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.junit.vintage<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit-vintage-engine<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 热部署 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!-- 如果不配置 fork，devtools 就不会起作用,devtools 是前端开发工具 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">fork</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">fork</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="9- 运行"><a class="markdownIt-Anchor" href="#9- 运行">#</a> 9. 运行</h1><p>在 Chrome 浏览器中输入 <code>http://localhost:8080/index.html</code> ，即可进入用户信息主页面。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
